//apply plugin: 'idea'
apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "dhcoder.sandbox"
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations { natives }

dependencies {
    compile project(":dhcoder.sandbox:core")
    compile "com.badlogicgames.gdx:gdx-backend-android:+"
    natives "com.badlogicgames.gdx:gdx-platform:+:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:+:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:+:natives-x86"
    compile "com.badlogicgames.gdx:gdx-box2d:+"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:+:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:+:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:+:natives-x86"

}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    def libsroot = "src/main/jniLibs"
    file("$libsroot/armeabi/").mkdirs();
    file("$libsroot/armeabi-v7a/").mkdirs();
    file("$libsroot/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if(jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("$libsroot/armeabi-v7a")
        if(jar.name.endsWith("natives-armeabi.jar")) outputDir = file("$libsroot/armeabi")
        if(jar.name.endsWith("natives-x86.jar")) outputDir = file("$libsroot/x86")
        if(outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}

//// sets up the Android Idea project, using the old Ant based build.
//idea {
//    module {
//        sourceDirs += file("src");
//        scopes = [ COMPILE: [plus:[project.configurations.compile]]]
//
//        iml {
//            withXml {
//                def node = it.asNode()
//                def builder = NodeBuilder.newInstance();
//                builder.current = node;
//                builder.component(name: "FacetManager") {
//                    facet(type: "android", name: "Android") {
//                        configuration {
//                            option(name: "UPDATE_PROPERTY_FILES", value:"true")
//                        }
//                    }
//                }
//            }
//        }
//    }
//}
